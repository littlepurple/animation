{"remainingRequest":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/workbase/animation/docs/.vuepress/components/WaterWavePanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/workbase/animation/docs/.vuepress/components/WaterWavePanel.vue","mtime":1585726478444},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js","mtime":1585637787426},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js","mtime":1585637788225}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport WaterWave from \"./WaterWave.js\";\nexport default {\n  data() {\n    return {\n      ele: null,\n      width: null,\n      height: null,\n      ctx: null,\n      radius: null, // 圆的半径\n    };\n  },\n  mounted() {\n    // requestAnimationFrame(this.drawSin(ctx));\n    const canvas = this.$refs.canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.ele = canvas;\n    this.radius = canvas.width / 2;\n    this.drawCircle(this.ctx);\n    this.wave1 = new WaterWave({\n      canvasWidth: this.width, // 轴长\n      canvasHeight: this.height, // 轴高\n      waveWidth: 0.055, // 波浪宽度,数越小越宽\n      waveHeight: 4, // 波浪高度,数越大越高\n      colors: [\"#F39C6B\", \"#A0563B\"], // 波浪颜色\n      xOffset: 0, // 初始偏移\n      speed: 0.04 // 速度\n    });\n    this.wave2 = new WaterWave({\n      canvasWidth: this.width, // 轴长\n      canvasHeight: this.height, // 轴高\n      waveWidth: 0.04, // 波浪宽度,数越小越宽\n      waveHeight: 3, // 波浪高度,数越大越高\n      colors: [\"rgba(243, 156, 107, 0.48)\", \"rgba(160, 86, 59, 0.48)\"], // 波浪颜色\n      xOffset: 2, // 初始偏移\n      speed: 0.02 // 速度\n    });\n    this.run(ctx => {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      this.wave1.drawSin(this.ctx);\n      this.wave2.drawSin(this.ctx);\n    });\n  },\n  methods: {\n    run(callback) {\n      requestAnimationFrame(() => {\n        this.run(callback);\n      });\n      callback();\n    },\n    drawCircle(ctx) {\n      const lineWidth = 4;\n      const cR = this.radius - lineWidth;\n      ctx.lineWidth = lineWidth;\n      ctx.beginPath();\n      ctx.arc(this.radius, this.radius, cR, 0, 2 * Math.PI);\n      ctx.strokeStyle = \"rgba(186, 165, 130, 0.3)\";\n      ctx.stroke();\n      ctx.clip();\n    }\n  }\n};\n",{"version":3,"sources":["WaterWavePanel.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WaterWavePanel.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div>\n    <canvas ref=\"canvas\" class=\"canvas\" width=\"300\" height=\"300\"></canvas>\n  </div>\n</template>\n<script>\nimport WaterWave from \"./WaterWave.js\";\nexport default {\n  data() {\n    return {\n      ele: null,\n      width: null,\n      height: null,\n      ctx: null,\n      radius: null, // 圆的半径\n    };\n  },\n  mounted() {\n    // requestAnimationFrame(this.drawSin(ctx));\n    const canvas = this.$refs.canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.ele = canvas;\n    this.radius = canvas.width / 2;\n    this.drawCircle(this.ctx);\n    this.wave1 = new WaterWave({\n      canvasWidth: this.width, // 轴长\n      canvasHeight: this.height, // 轴高\n      waveWidth: 0.055, // 波浪宽度,数越小越宽\n      waveHeight: 4, // 波浪高度,数越大越高\n      colors: [\"#F39C6B\", \"#A0563B\"], // 波浪颜色\n      xOffset: 0, // 初始偏移\n      speed: 0.04 // 速度\n    });\n    this.wave2 = new WaterWave({\n      canvasWidth: this.width, // 轴长\n      canvasHeight: this.height, // 轴高\n      waveWidth: 0.04, // 波浪宽度,数越小越宽\n      waveHeight: 3, // 波浪高度,数越大越高\n      colors: [\"rgba(243, 156, 107, 0.48)\", \"rgba(160, 86, 59, 0.48)\"], // 波浪颜色\n      xOffset: 2, // 初始偏移\n      speed: 0.02 // 速度\n    });\n    this.run(ctx => {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      this.wave1.drawSin(this.ctx);\n      this.wave2.drawSin(this.ctx);\n    });\n  },\n  methods: {\n    run(callback) {\n      requestAnimationFrame(() => {\n        this.run(callback);\n      });\n      callback();\n    },\n    drawCircle(ctx) {\n      const lineWidth = 4;\n      const cR = this.radius - lineWidth;\n      ctx.lineWidth = lineWidth;\n      ctx.beginPath();\n      ctx.arc(this.radius, this.radius, cR, 0, 2 * Math.PI);\n      ctx.strokeStyle = \"rgba(186, 165, 130, 0.3)\";\n      ctx.stroke();\n      ctx.clip();\n    }\n  }\n};\n</script>\n<style scoped>\n</style>"]}]}