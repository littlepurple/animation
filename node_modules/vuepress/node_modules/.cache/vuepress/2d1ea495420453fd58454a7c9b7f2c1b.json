{"remainingRequest":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/workbase/animation/docs/.vuepress/components/SinPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/workbase/animation/docs/.vuepress/components/SinPanel.vue","mtime":1585634673606},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js","mtime":1585637787426},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js","mtime":1585637788225}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      ele: null,\n      ctx: null,\n      width: null,\n      height: null\n    };\n  },\n  mounted() {\n    this.ele = this.$refs.canvas;\n    this.ctx = this.ele.getContext(\"2d\");\n    this.resize();\n    window.addEventListener(\"resize\", () => this.resize());\n    this.draw(this.ctx);\n  },\n  methods: {\n    draw(ctx) {\n      this.ctx.clearRect(0, 0, this.ele.width, this.ele.height);\n      ctx.beginPath();\n      ctx.moveTo(0, this.height / 2);\n      //   创建线性的渐变对象 (x0, y0, y1, y2)\n      var grad = ctx.createLinearGradient(0, 0, this.width, 0);\n      grad.addColorStop(0, \"#6e45e2\"); // 规定渐变的颜色\n      grad.addColorStop(1, \"#88d3ce\");\n      ctx.strokeStyle = grad;\n      const amplitude = Math.random() * 60 + 10;\n      for (let x = 0; x < this.width; x++) {\n        const y = Math.sin(x * 0.02) * amplitude + this.ele.height / 2;\n        ctx.lineTo(x, y);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    },\n    resize() {\n      this.width = this.ele.width = this.ele.offsetWidth;\n      this.height = this.ele.height = this.ele.offsetHeight;\n      this.draw(this.ctx);\n    }\n  }\n};\n",{"version":3,"sources":["SinPanel.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SinPanel.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div class=\"sin-canvas-container\">\n    <canvas ref=\"canvas\" class=\"canvas\"></canvas>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      ele: null,\n      ctx: null,\n      width: null,\n      height: null\n    };\n  },\n  mounted() {\n    this.ele = this.$refs.canvas;\n    this.ctx = this.ele.getContext(\"2d\");\n    this.resize();\n    window.addEventListener(\"resize\", () => this.resize());\n    this.draw(this.ctx);\n  },\n  methods: {\n    draw(ctx) {\n      this.ctx.clearRect(0, 0, this.ele.width, this.ele.height);\n      ctx.beginPath();\n      ctx.moveTo(0, this.height / 2);\n      //   创建线性的渐变对象 (x0, y0, y1, y2)\n      var grad = ctx.createLinearGradient(0, 0, this.width, 0);\n      grad.addColorStop(0, \"#6e45e2\"); // 规定渐变的颜色\n      grad.addColorStop(1, \"#88d3ce\");\n      ctx.strokeStyle = grad;\n      const amplitude = Math.random() * 60 + 10;\n      for (let x = 0; x < this.width; x++) {\n        const y = Math.sin(x * 0.02) * amplitude + this.ele.height / 2;\n        ctx.lineTo(x, y);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    },\n    resize() {\n      this.width = this.ele.width = this.ele.offsetWidth;\n      this.height = this.ele.height = this.ele.offsetHeight;\n      this.draw(this.ctx);\n    }\n  }\n};\n</script>\n<style scoped>\n.sin-canvas-container {\n  width: 100%;\n  height: 100%;\n  background: #232323;\n}\n.canvas {\n  width: 100%;\n  height: 100%;\n}\n</style>"]}]}