{"remainingRequest":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mac/workbase/animation/docs/.vuepress/components/wave.js","dependencies":[{"path":"/Users/mac/workbase/animation/docs/.vuepress/components/wave.js","mtime":1585726108072},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js","mtime":1585637787426}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/mac/workbase/animation/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"/Users/mac/workbase/animation/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\n\nvar Wave =\n/*#__PURE__*/\nfunction () {\n  function Wave(canvas, options) {\n    _classCallCheck(this, Wave);\n\n    this.canvas = canvas;\n    this.options = options;\n    this.xMove = this.options.offset; // 初始的位置\n\n    this.xSpeed = this.options.xSpeed;\n    this.resize();\n  }\n\n  _createClass(Wave, [{\n    key: \"resize\",\n    value: function resize() {\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n      this.amplitude = this.canvas.height * this.options.amplitude;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.beginPath();\n      this.xMove += this.xSpeed;\n      ctx.moveTo(0, this.height / 2);\n      var grad = ctx.createLinearGradient(0, 0, this.width, 0);\n      grad.addColorStop(0, this.options.start);\n      grad.addColorStop(1, this.options.stop);\n      ctx.strokeStyle = grad;\n      ctx.lineWidth = this.options.lineWidth;\n\n      for (var x = 0; x < this.width; x++) {\n        var radians = x / this.width * Math.PI * 2;\n        var scale = (Math.sin(radians - Math.PI * 0.5) + 1) * 0.5;\n        var y = Math.sin(x * 0.02 + this.xMove) * this.amplitude * scale + this.height / 2;\n        ctx.lineTo(x, y);\n      }\n\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }]);\n\n  return Wave;\n}();\n\nexport default Wave;",{"version":3,"sources":["docs/.vuepress/components/wave.js"],"names":["Wave","canvas","options","xMove","offset","xSpeed","resize","width","height","amplitude","ctx","beginPath","moveTo","grad","createLinearGradient","addColorStop","start","stop","strokeStyle","lineWidth","x","radians","Math","PI","scale","sin","y","lineTo","stroke","closePath"],"mappings":";;;IACMA,I;;;AACF,gBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AACzB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAa,KAAKD,OAAL,CAAaE,MAA1B,CAHyB,CAGS;;AAClC,SAAKC,MAAL,GAAc,KAAKH,OAAL,CAAaG,MAA3B;AACA,SAAKC,MAAL;AACH;;;;6BACQ;AACL,WAAKC,KAAL,GAAa,KAAKN,MAAL,CAAYM,KAAzB;AACA,WAAKC,MAAL,GAAc,KAAKP,MAAL,CAAYO,MAA1B;AACA,WAAKC,SAAL,GAAiB,KAAKR,MAAL,CAAYO,MAAZ,GAAqB,KAAKN,OAAL,CAAaO,SAAnD;AACH;;;yBACIC,G,EAAK;AACNA,UAAIC,SAAJ;AACA,WAAKR,KAAL,IAAc,KAAKE,MAAnB;AACAK,UAAIE,MAAJ,CAAW,CAAX,EAAc,KAAKJ,MAAL,GAAc,CAA5B;AACA,UAAIK,OAAOH,IAAII,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAKP,KAApC,EAA2C,CAA3C,CAAX;AACAM,WAAKE,YAAL,CAAkB,CAAlB,EAAqB,KAAKb,OAAL,CAAac,KAAlC;AACAH,WAAKE,YAAL,CAAkB,CAAlB,EAAqB,KAAKb,OAAL,CAAae,IAAlC;AACAP,UAAIQ,WAAJ,GAAkBL,IAAlB;AACAH,UAAIS,SAAJ,GAAgB,KAAKjB,OAAL,CAAaiB,SAA7B;;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKb,KAAzB,EAAgCa,GAAhC,EAAqC;AACjC,YAAMC,UAAWD,IAAI,KAAKb,KAAV,GAAmBe,KAAKC,EAAxB,GAA6B,CAA7C;AACA,YAAMC,QAAQ,CAACF,KAAKG,GAAL,CAASJ,UAAUC,KAAKC,EAAL,GAAU,GAA7B,IAAoC,CAArC,IAA0C,GAAxD;AACA,YAAMG,IACFJ,KAAKG,GAAL,CAASL,IAAI,IAAJ,GAAW,KAAKjB,KAAzB,IAAkC,KAAKM,SAAvC,GAAmDe,KAAnD,GACA,KAAKhB,MAAL,GAAc,CAFlB;AAGAE,YAAIiB,MAAJ,CAAWP,CAAX,EAAcM,CAAd;AACH;;AACDhB,UAAIkB,MAAJ;AACAlB,UAAImB,SAAJ;AACH;;;;;;AAEL,eAAe7B,IAAf","sourceRoot":"/Users/mac/workbase/animation","sourcesContent":["\nclass Wave {\n    constructor(canvas, options) {\n        this.canvas = canvas;\n        this.options = options;\n        this.xMove = this.options.offset; // 初始的位置\n        this.xSpeed = this.options.xSpeed; \n        this.resize();\n    }\n    resize() {\n        this.width = this.canvas.width;\n        this.height = this.canvas.height;\n        this.amplitude = this.canvas.height * this.options.amplitude;\n    }\n    draw(ctx) {\n        ctx.beginPath();\n        this.xMove += this.xSpeed;\n        ctx.moveTo(0, this.height / 2);\n        var grad = ctx.createLinearGradient(0, 0, this.width, 0);\n        grad.addColorStop(0, this.options.start);\n        grad.addColorStop(1, this.options.stop);\n        ctx.strokeStyle = grad;\n        ctx.lineWidth = this.options.lineWidth;\n        for (let x = 0; x < this.width; x++) {\n            const radians = (x / this.width) * Math.PI * 2;\n            const scale = (Math.sin(radians - Math.PI * 0.5) + 1) * 0.5;\n            const y =\n                Math.sin(x * 0.02 + this.xMove) * this.amplitude * scale +\n                this.height / 2;\n            ctx.lineTo(x, y);\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n}\nexport default Wave"]}]}