{"remainingRequest":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/workbase/animation/docs/.vuepress/components/ManPanel.vue?vue&type=style&index=0&id=2b6f37ce&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/workbase/animation/docs/.vuepress/components/ManPanel.vue","mtime":1585635213184},{"path":"/Users/mac/workbase/animation/node_modules/css-loader/index.js","mtime":1585216689796},{"path":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1585637788225},{"path":"/Users/mac/workbase/animation/node_modules/postcss-loader/lib/index.js","mtime":1585216690536},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js","mtime":1585637788225}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.canvas {\n  width: 100%;\n  height: 400px;\n  background: #f1513b;\n}\n",{"version":3,"sources":["ManPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;AACA;AACA","file":"ManPanel.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <canvas ref=\"canvas\" class=\"canvas\"></canvas>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      ctx: null,\n      ele: null,\n      width: null,\n      height: null\n    };\n  },\n  mounted() {\n    this.ele = this.$refs.canvas;\n    this.ctx = this.ele.getContext(\"2d\");\n    this.resize();\n    window.addEventListener(\"resize\", () => this.resize());\n    let tick = 0;\n    this.run(() => {\n      tick += 0.03;\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      this.init(tick);\n    });\n  },\n  methods: {\n    resize() {\n      this.width = this.ele.width = this.ele.offsetWidth;\n      this.height = this.ele.height = this.ele.offsetHeight;\n      this.init();\n    },\n    run(callback) {\n      requestAnimationFrame(() => {\n        this.run(callback);\n      });\n      callback();\n    },\n    drawHead(t) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(0, Math.sin(t) * 4); //translate 方法重新映射画布上的 (0,0) 位置。\n      ctx.arc(140, 45, 35, 0, 2 * Math.PI);\n      // ctx.fill('#ffffff');\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n      ctx.closePath();\n      ctx.restore();\n      // console.log(123254);\n    },\n    drawBody(t) {\n      const ctx = this.ctx;\n      ctx.beginPath();\n      ctx.save();\n      ctx.rotate(((Math.sin(t) * Math.PI) / 180) * -1);\n      ctx.translate(0, Math.sin(t) * 4);\n      // ctx.scale(0.5, 0.5);\n      const body = new Path2D(\n        \"M120,260 L80,260 C75,260 85,100 105,100 C110,100 130,110 120,110 L120,260Z\"\n      );\n      // ctx.fill(body);\n      // ctx.restore();\n      // ctx.closePath();\n      // console.log(this.width / 2); \n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill(body);\n      ctx.stroke();\n      ctx.restore();\n      ctx.closePath();\n    },\n    drawFeet(t) {\n      const ctx = this.ctx;\n      t = t / 2;\n      ctx.save();\n      ctx.scale(0.5, 0.5);\n      ctx.translate(0, 460);\n      const foot = new Path2D(\n        \"M43,0 C67,0 80,16 80,22 C80,26 78.6666667,28 76,28 C29.3333333,28 6,28 6,28 C6,28 -1.34111707e-14,30 0,17 C1.42108547e-14,4 10,1.9505735e-16 13,0 C16,0 13,0 43,0 Z\"\n      );\n\n      ctx.save();\n      ctx.translate(Math.cos(t) * -50, Math.sin(t) > 0 ? Math.sin(t) * -35 : 0);\n      if (t < Math.PI) {\n        ctx.rotate(((Math.sin(t) * Math.PI) / 180) * -5);\n      }\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill(foot);\n      ctx.restore();\n\n      ctx.save();\n      ctx.translate(\n        Math.cos(t + Math.PI) * -50,\n        Math.sin(t + Math.PI) > 0 ? Math.sin(t + Math.PI) * -35 : 0\n      );\n      if (t > Math.PI) {\n        ctx.rotate(((Math.sin(t + Math.PI) * Math.PI) / 180) * -5);\n      }\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill(foot);\n      ctx.restore();\n\n      ctx.restore();\n    },\n    init(t) {\n      this.drawHead(t);\n      this.drawBody(t);\n      this.drawFeet(t);\n    }\n  }\n};\n</script>\n<style scoped>\n.canvas {\n  width: 100%;\n  height: 400px;\n  background: #f1513b;\n}\n</style>"]}]}