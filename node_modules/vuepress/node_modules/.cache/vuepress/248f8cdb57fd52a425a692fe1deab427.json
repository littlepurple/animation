{"remainingRequest":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/workbase/animation/docs/.vuepress/components/Arrow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/workbase/animation/docs/.vuepress/components/Arrow.vue","mtime":1585728698835},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js","mtime":1585637787426},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js","mtime":1585637788225}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport Arrow from \"./Arrow\";\nexport default {\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      width: null,\n      height: null,\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    let centerX = this.canvas.width / 2;\n    let centerY = this.canvas.height / 2;\n    this.resize();\n    window.addEventListener(\"resize\", () => this.resize());\n    // 将arrow的坐标设置为canvas的中心\n    var mouse = this.captureMouse(this.canvas);\n    var arrow1 = new Arrow();\n    var arrow2 = new Arrow();\n    arrow1.x = centerX;\n    arrow1.y = centerY;\n\n    arrow2.x = centerX / 2;\n    arrow2.y = centerY / 2;\n    this.run(() => {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n        //设置旋转角度\n      arrow1.rotation = this.RotationToMouse(mouse.x, mouse.y, arrow1.x, arrow1.y); //角度变化\n      arrow1.draw(this.ctx);\n      arrow2.rotation = this.RotationToMouse(mouse.x, mouse.y, arrow2.x, arrow2.y); //角度变化\n      arrow2.draw(this.ctx);\n   });\n  },\n  methods: {\n    resize() {\n      this.width = this.canvas.width = this.canvas.offsetWidth;\n      this.height = this.canvas.height = this.canvas.offsetHeight;\n      // this.planeDraw();\n    },\n    captureMouse(element) {\n      var mouse = { x: 0, y: 0 };\n      element.addEventListener(\n        \"mousemove\",\n        function(event) {\n          var x, y;\n          if (event.pageX || event.pageY) {\n            x = event.pageX;\n            y = event.pageY;\n          } else {\n            x =\n              event.clientX +\n              document.body.scrollLeft +\n              document.documentElement.scrollLeft;\n            y =\n              event.clientY +\n              document.body.scrollTop +\n              document.documentElement.scrollTop;\n          }\n\n          x -= element.offsetLeft;\n          y -= element.offsetTop;\n\n          mouse.x = x;\n          mouse.y = y;\n        },\n        false\n      );\n\n      return mouse;\n    },\n    RotationToMouse(mx, my, ox, oy) {\n      var dx = mx - ox;\n      var dy = my - oy;\n      var angle = Math.atan2(dy, dx);\n      return angle;\n    },\n    run(callback) {\n      requestAnimationFrame(() => {\n        this.run(callback);\n      });\n      callback();\n    }\n  }\n};\n",{"version":3,"sources":["Arrow.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Arrow.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <div>\n    <canvas ref=\"canvas\" class=\"canvas\" width=\"500\" height=\"500\" style=\"background:#ccc;\"></canvas>\n  </div>\n</template>\n<script>\nimport Arrow from \"./Arrow\";\nexport default {\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      width: null,\n      height: null,\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    let centerX = this.canvas.width / 2;\n    let centerY = this.canvas.height / 2;\n    this.resize();\n    window.addEventListener(\"resize\", () => this.resize());\n    // 将arrow的坐标设置为canvas的中心\n    var mouse = this.captureMouse(this.canvas);\n    var arrow1 = new Arrow();\n    var arrow2 = new Arrow();\n    arrow1.x = centerX;\n    arrow1.y = centerY;\n\n    arrow2.x = centerX / 2;\n    arrow2.y = centerY / 2;\n    this.run(() => {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n        //设置旋转角度\n      arrow1.rotation = this.RotationToMouse(mouse.x, mouse.y, arrow1.x, arrow1.y); //角度变化\n      arrow1.draw(this.ctx);\n      arrow2.rotation = this.RotationToMouse(mouse.x, mouse.y, arrow2.x, arrow2.y); //角度变化\n      arrow2.draw(this.ctx);\n   });\n  },\n  methods: {\n    resize() {\n      this.width = this.canvas.width = this.canvas.offsetWidth;\n      this.height = this.canvas.height = this.canvas.offsetHeight;\n      // this.planeDraw();\n    },\n    captureMouse(element) {\n      var mouse = { x: 0, y: 0 };\n      element.addEventListener(\n        \"mousemove\",\n        function(event) {\n          var x, y;\n          if (event.pageX || event.pageY) {\n            x = event.pageX;\n            y = event.pageY;\n          } else {\n            x =\n              event.clientX +\n              document.body.scrollLeft +\n              document.documentElement.scrollLeft;\n            y =\n              event.clientY +\n              document.body.scrollTop +\n              document.documentElement.scrollTop;\n          }\n\n          x -= element.offsetLeft;\n          y -= element.offsetTop;\n\n          mouse.x = x;\n          mouse.y = y;\n        },\n        false\n      );\n\n      return mouse;\n    },\n    RotationToMouse(mx, my, ox, oy) {\n      var dx = mx - ox;\n      var dy = my - oy;\n      var angle = Math.atan2(dy, dx);\n      return angle;\n    },\n    run(callback) {\n      requestAnimationFrame(() => {\n        this.run(callback);\n      });\n      callback();\n    }\n  }\n};\n</script>\n<style scoped>\n</style>"]}]}