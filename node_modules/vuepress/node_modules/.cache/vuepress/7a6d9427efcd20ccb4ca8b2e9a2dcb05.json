{"remainingRequest":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/workbase/animation/docs/.vuepress/components/SinRunPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/workbase/animation/docs/.vuepress/components/SinRunPanel.vue","mtime":1585468976092},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/babel-loader/lib/index.js","mtime":1585637787426},{"path":"/Users/mac/workbase/animation/node_modules/cache-loader/dist/cjs.js","mtime":1585216689466},{"path":"/Users/mac/workbase/animation/node_modules/vue-loader/lib/index.js","mtime":1585637788225}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/mac/workbase/animation/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\nimport Wave from \"./wave.js\";\nexport default {\n  data: function data() {\n    return {\n      ele: null,\n      ctx: null,\n      canvas: null,\n      width: null,\n      height: null,\n      waves: [],\n      xMove: null,\n      xSpeed: null,\n      options: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.ele = this.$refs.canvas;\n    this.ctx = this.ele.getContext(\"2d\");\n    this.resize();\n    window.addEventListener(\"resize\", function () {\n      return _this.resize();\n    });\n    this.run(function () {\n      _this.ctx.clearRect(0, 0, _this.ele.width, _this.ele.height);\n\n      _this.waves.forEach(function (wave) {\n        wave.draw(_this.ctx);\n      });\n    });\n  },\n  methods: {\n    resize: function resize() {\n      this.width = this.ele.width = this.ele.offsetWidth;\n      this.height = this.ele.height = this.ele.offsetHeight;\n      this.init();\n    },\n    run: function run(callback) {\n      var _this2 = this;\n\n      requestAnimationFrame(function () {\n        _this2.run(callback);\n      });\n      callback();\n    },\n    init: function init() {\n      var gradients = [[\"#6e45e2\", \"#88d3ce\"], [\"#de6262\", \"#ffb88c\"], [\"#64b3f4\", \"#c2e59c\"], [\"#0fd850\", \"#f9f047\"], [\"#007adf\", \"#00ecbc\"], [\"#B6CEE8\", \"#F578DC\"], [\"#9be15d\", \"#00e3ae\"]];\n      this.waves = [];\n\n      for (var i = 0; i < 5; i++) {\n        var _gradients$Math$floor = _slicedToArray(gradients[Math.floor(Math.random() * gradients.length)], 2),\n            start = _gradients$Math$floor[0],\n            stop = _gradients$Math$floor[1];\n\n        this.waves.push(new Wave(this.ele, {\n          start: start,\n          stop: stop,\n          lineWidth: 1,\n          xSpeed: this.valueMapping(Math.random(), 0, 1, -0.05, -0.08),\n          // 偏移的速度\n          amplitude: this.valueMapping(Math.random(), 0, 1, 0.05, 0.5),\n          offset: Math.random() * 100 // 初始偏移\n\n        }));\n      }\n    },\n    valueMapping: function valueMapping(x, inMin, inMax, outMin, outMax) {\n      return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    }\n  }\n};",{"version":3,"sources":["SinRunPanel.vue"],"names":[],"mappings":";;;;;;;;AAMA,OAAA,IAAA,MAAA,WAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,WAAA,IADA;AAEA,WAAA,IAFA;AAGA,cAAA,IAHA;AAIA,aAAA,IAJA;AAKA,cAAA,IALA;AAMA,aAAA,EANA;AAOA,aAAA,IAPA;AAQA,cAAA,IARA;AASA,eAAA;AATA,KAAA;AAWA,GAbA;AAcA,SAdA,qBAcA;AAAA;;AACA,SAAA,GAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,SAAA,GAAA,GAAA,KAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,SAAA,MAAA;AACA,WAAA,gBAAA,CAAA,QAAA,EAAA;AAAA,aAAA,MAAA,MAAA,EAAA;AAAA,KAAA;AACA,SAAA,GAAA,CAAA,YAAA;AACA,YAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,GAAA,CAAA,KAAA,EAAA,MAAA,GAAA,CAAA,MAAA;;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,gBAAA;AACA,aAAA,IAAA,CAAA,MAAA,GAAA;AACA,OAFA;AAGA,KALA;AAMA,GAzBA;AA0BA,WAAA;AACA,UADA,oBACA;AACA,WAAA,KAAA,GAAA,KAAA,GAAA,CAAA,KAAA,GAAA,KAAA,GAAA,CAAA,WAAA;AACA,WAAA,MAAA,GAAA,KAAA,GAAA,CAAA,MAAA,GAAA,KAAA,GAAA,CAAA,YAAA;AACA,WAAA,IAAA;AACA,KALA;AAMA,OANA,eAMA,QANA,EAMA;AAAA;;AACA,4BAAA,YAAA;AACA,eAAA,GAAA,CAAA,QAAA;AACA,OAFA;AAGA;AACA,KAXA;AAYA,QAZA,kBAYA;AACA,UAAA,YAAA,CACA,CAAA,SAAA,EAAA,SAAA,CADA,EAEA,CAAA,SAAA,EAAA,SAAA,CAFA,EAGA,CAAA,SAAA,EAAA,SAAA,CAHA,EAIA,CAAA,SAAA,EAAA,SAAA,CAJA,EAKA,CAAA,SAAA,EAAA,SAAA,CALA,EAMA,CAAA,SAAA,EAAA,SAAA,CANA,EAOA,CAAA,SAAA,EAAA,SAAA,CAPA,CAAA;AASA,WAAA,KAAA,GAAA,EAAA;;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,EAAA;AAAA,mDACA,UACA,KAAA,KAAA,CAAA,KAAA,MAAA,KAAA,UAAA,MAAA,CADA,CADA;AAAA,YACA,KADA;AAAA,YACA,IADA;;AAIA,aAAA,KAAA,CAAA,IAAA,CACA,IAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA,sBADA;AAEA,oBAFA;AAGA,qBAAA,CAHA;AAIA,kBAAA,KAAA,YAAA,CAAA,KAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAJA;AAIA;AACA,qBAAA,KAAA,YAAA,CAAA,KAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CALA;AAMA,kBAAA,KAAA,MAAA,KAAA,GANA,CAMA;;AANA,SAAA,CADA;AAUA;AACA,KAtCA;AAuCA,gBAvCA,wBAuCA,CAvCA,EAuCA,KAvCA,EAuCA,KAvCA,EAuCA,MAvCA,EAuCA,MAvCA,EAuCA;AACA,aAAA,CAAA,IAAA,KAAA,KAAA,SAAA,MAAA,CAAA,IAAA,QAAA,KAAA,IAAA,MAAA;AACA;AAzCA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"sin-canvas-container\">\n    <canvas ref=\"canvas\" class=\"canvas\"></canvas>\n  </div>\n</template>\n<script>\nimport Wave from \"./wave.js\";\nexport default {\n  data() {\n    return {\n      ele: null,\n      ctx: null,\n      canvas: null,\n      width: null,\n      height: null,\n      waves: [],\n      xMove: null,\n      xSpeed: null,\n      options: {}\n    };\n  },\n  mounted() {\n    this.ele = this.$refs.canvas;\n    this.ctx = this.ele.getContext(\"2d\");\n    this.resize();\n    window.addEventListener(\"resize\", () => this.resize());\n    this.run(() => {\n      this.ctx.clearRect(0, 0, this.ele.width, this.ele.height);\n      this.waves.forEach(wave => {\n        wave.draw(this.ctx);\n      });\n    });\n  },\n  methods: {\n    resize() {\n      this.width = this.ele.width = this.ele.offsetWidth;\n      this.height = this.ele.height = this.ele.offsetHeight;\n      this.init();\n    },\n    run(callback) {\n      requestAnimationFrame(() => {\n        this.run(callback);\n      });\n      callback();\n    },\n    init() {\n      const gradients = [\n        [\"#6e45e2\", \"#88d3ce\"],\n        [\"#de6262\", \"#ffb88c\"],\n        [\"#64b3f4\", \"#c2e59c\"],\n        [\"#0fd850\", \"#f9f047\"],\n        [\"#007adf\", \"#00ecbc\"],\n        [\"#B6CEE8\", \"#F578DC\"],\n        [\"#9be15d\", \"#00e3ae\"]\n      ];\n      this.waves = [];\n      for (let i = 0; i < 5; i++) {\n        const [start, stop] = gradients[\n          Math.floor(Math.random() * gradients.length)\n        ];\n        this.waves.push(\n          new Wave(this.ele, {\n            start,\n            stop,\n            lineWidth: 1,\n            xSpeed: this.valueMapping(Math.random(), 0, 1, -0.05, -0.08), // 偏移的速度\n            amplitude: this.valueMapping(Math.random(), 0, 1, 0.05, 0.5),\n            offset: Math.random() * 100  // 初始偏移\n          })\n        );\n      }\n    },\n    valueMapping(x, inMin, inMax, outMin, outMax) {\n      return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n  },\n};\n</script>\n<style scoped>\n.sin-canvas-container {\n  width: 100%;\n  height: 100%;\n  background: #232323;\n}\n.canvas {\n  width: 100%;\n  height: 100%;\n}\n</style>"],"sourceRoot":"docs/.vuepress/components"}]}